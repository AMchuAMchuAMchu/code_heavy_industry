(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{1025:function(t,a,s){t.exports=s.p+"assets/img/img002.03307860.png"},1026:function(t,a,s){t.exports=s.p+"assets/img/img003.88bee938.png"},1027:function(t,a,s){t.exports=s.p+"assets/img/img004.37fe39f1.png"},1028:function(t,a,s){t.exports=s.p+"assets/img/img001.47ead2d6.png"},1029:function(t,a,s){t.exports=s.p+"assets/img/img006.1697d617.png"},1030:function(t,a,s){t.exports=s.p+"assets/img/img007.1b0fa027.png"},2146:function(t,a,s){"use strict";s.r(a);var i=s(54),_=Object(i.a)({},(function(){var t=this,a=t.$createElement,i=t._self._c||a;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("p"),i("div",{staticClass:"table-of-contents"},[i("ul",[i("li",[i("a",{attrs:{href:"#_1、总体技术体系"}},[t._v("1、总体技术体系")]),i("ul",[i("li",[i("a",{attrs:{href:"#_1单一架构"}},[t._v("①单一架构")])]),i("li",[i("a",{attrs:{href:"#_2分布式架构"}},[t._v("②分布式架构")])])])]),i("li",[i("a",{attrs:{href:"#_2、框架的概念"}},[t._v("2、框架的概念")])]),i("li",[i("a",{attrs:{href:"#_3、mybatis历史"}},[t._v("3、Mybatis历史")])]),i("li",[i("a",{attrs:{href:"#_4、mybatis下载地址"}},[t._v("4、Mybatis下载地址")])]),i("li",[i("a",{attrs:{href:"#_5、mybatis特性"}},[t._v("5、Mybatis特性")])]),i("li",[i("a",{attrs:{href:"#_6、和其它持久化层技术对比"}},[t._v("6、和其它持久化层技术对比")])])])]),i("p"),t._v(" "),i("h1",{attrs:{id:"第一章-前言"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#第一章-前言"}},[t._v("#")]),t._v(" 第一章 前言")]),t._v(" "),i("h2",{attrs:{id:"_1、总体技术体系"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1、总体技术体系"}},[t._v("#")]),t._v(" 1、总体技术体系")]),t._v(" "),i("h3",{attrs:{id:"_1单一架构"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1单一架构"}},[t._v("#")]),t._v(" ①单一架构")]),t._v(" "),i("p",[t._v("一个项目，一个工程，导出为一个war包，在一个Tomcat上运行。也叫all in one。")]),t._v(" "),i("p",[i("img",{attrs:{src:s(1025),alt:"./images"}})]),t._v(" "),i("h3",{attrs:{id:"_2分布式架构"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_2分布式架构"}},[t._v("#")]),t._v(" ②分布式架构")]),t._v(" "),i("p",[t._v("一个项目（对应 IDEA 中的一个 project），拆分成很多个模块，每个模块是一个 IDEA 中的一个 module。每一个工程都是运行在自己的 Tomcat 上。模块之间可以互相调用。每一个模块内部可以看成是一个单一架构的应用。")]),t._v(" "),i("p",[i("img",{attrs:{src:s(1026),alt:"./images"}})]),t._v(" "),i("h2",{attrs:{id:"_2、框架的概念"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_2、框架的概念"}},[t._v("#")]),t._v(" 2、框架的概念")]),t._v(" "),i("p",[t._v("框架=jar包+配置文件")]),t._v(" "),i("p",[i("img",{attrs:{src:s(1027),alt:"./images"}})]),t._v(" "),i("h2",{attrs:{id:"_3、mybatis历史"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_3、mybatis历史"}},[t._v("#")]),t._v(" 3、Mybatis历史")]),t._v(" "),i("p",[i("img",{attrs:{src:s(1028),alt:"./images"}})]),t._v(" "),i("blockquote",[i("p",[t._v("MyBatis最初是Apache的一个开源项目"),i("span",{staticStyle:{color:"blue","font-weight":"bold"}},[t._v("iBatis")]),t._v(", 2010年6月这个项目由Apache Software Foundation迁移到了Google Code。随着开发团队转投Google Code旗下， iBatis3.x正式更名为MyBatis。代码于2013年11月迁移到Github。")]),t._v(" "),i("p",[t._v("iBatis一词来源于“internet”和“abatis”的组合，是一个基于Java的持久层框架。 iBatis提供的持久层框架包括SQL Maps和Data Access Objects（DAO）。")])]),t._v(" "),i("h2",{attrs:{id:"_4、mybatis下载地址"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4、mybatis下载地址"}},[t._v("#")]),t._v(" 4、Mybatis下载地址")]),t._v(" "),i("p",[t._v("https://github.com/mybatis/mybatis-3")]),t._v(" "),i("p",[i("img",{attrs:{src:s(1029),alt:"./images"}})]),t._v(" "),i("p",[i("img",{attrs:{src:s(1030),alt:"./images"}})]),t._v(" "),i("h2",{attrs:{id:"_5、mybatis特性"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5、mybatis特性"}},[t._v("#")]),t._v(" 5、Mybatis特性")]),t._v(" "),i("ul",[i("li",[t._v("MyBatis支持定制化SQL、存储过程以及高级映射")]),t._v(" "),i("li",[t._v("MyBatis避免了几乎所有的JDBC代码和手动设置参数以及结果集解析操作")]),t._v(" "),i("li",[t._v("MyBatis可以使用简单的XML或注解实现配置和原始映射；将接口和Java的POJO（Plain Ordinary Java Object，普通的Java对象）映射成数据库中的记录")]),t._v(" "),i("li",[t._v("Mybatis是一个半自动的ORM（Object   Relation  Mapping）框架")])]),t._v(" "),i("h2",{attrs:{id:"_6、和其它持久化层技术对比"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_6、和其它持久化层技术对比"}},[t._v("#")]),t._v(" 6、和其它持久化层技术对比")]),t._v(" "),i("ul",[i("li",[t._v("JDBC\n"),i("ul",[i("li",[t._v("SQL 夹杂在Java代码中耦合度高，导致硬编码内伤")]),t._v(" "),i("li",[t._v("维护不易且实际开发需求中 SQL 有变化，频繁修改的情况多见")]),t._v(" "),i("li",[t._v("代码冗长，开发效率低")])])]),t._v(" "),i("li",[t._v("Hibernate 和 JPA\n"),i("ul",[i("li",[t._v("操作简便，开发效率高")]),t._v(" "),i("li",[t._v("程序中的长难复杂 SQL 需要绕过框架")]),t._v(" "),i("li",[t._v("内部自动生成的 SQL，不容易做特殊优化")]),t._v(" "),i("li",[t._v("基于全映射的全自动框架，大量字段的 POJO 进行部分映射时比较困难。")]),t._v(" "),i("li",[t._v("反射操作太多，导致数据库性能下降")])])]),t._v(" "),i("li",[t._v("MyBatis\n"),i("ul",[i("li",[t._v("轻量级，性能出色")]),t._v(" "),i("li",[t._v("SQL 和 Java 编码分开，功能边界清晰。Java代码专注业务、SQL语句专注数据")]),t._v(" "),i("li",[t._v("开发效率稍逊于 HIbernate，但是完全能够接收")])])])]),t._v(" "),i("p",[i("RouterLink",{attrs:{to:"/pro003-Mybatis/lecture/index.html"}},[t._v("回目录")]),t._v(" "),i("RouterLink",{attrs:{to:"/pro003-Mybatis/lecture/chapter02/index.html"}},[t._v("下一章")])],1)])}),[],!1,null,null,null);a.default=_.exports}}]);