(window.webpackJsonp=window.webpackJsonp||[]).push([[201],{1974:function(t,a,e){"use strict";e.r(a);var v=e(54),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p"),v("div",{staticClass:"table-of-contents"},[v("ul",[v("li",[v("a",{attrs:{href:"#_1、单一架构技术体系"}},[t._v("1、单一架构技术体系")])]),v("li",[v("a",{attrs:{href:"#_2、视图层"}},[t._v("2、视图层")])]),v("li",[v("a",{attrs:{href:"#_3、web2-0"}},[t._v("3、Web2.0")])])])]),v("p"),t._v(" "),v("h1",{attrs:{id:"第一节-单一架构回顾"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第一节-单一架构回顾"}},[t._v("#")]),t._v(" 第一节 单一架构回顾")]),t._v(" "),v("p",[t._v("我们从现在的JavaWeb阶段到后面学习SSM框架阶段都是在学习单一架构项目开发的技术。而在JavaWeb阶段由于重点是探讨如何实现Web开发，所以必须学习一部分前端开发的技术。本节就是让大家明确我们现在要学习的内容在整个架构体系中处于什么位置。")]),t._v(" "),v("h2",{attrs:{id:"_1、单一架构技术体系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、单一架构技术体系"}},[t._v("#")]),t._v(" 1、单一架构技术体系")]),t._v(" "),v("p",[v("img",{attrs:{src:e(532),alt:"./images"}})]),t._v(" "),v("h2",{attrs:{id:"_2、视图层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、视图层"}},[t._v("#")]),t._v(" 2、视图层")]),t._v(" "),v("p",[t._v("严格来说视图分成两层：")]),t._v(" "),v("ul",[v("li",[t._v("前端技术：HTML/CSS/JavaScript")]),t._v(" "),v("li",[t._v("服务器端页面模板技术：Thymeleaf")])]),t._v(" "),v("p",[t._v("其中HTML、CSS、JavaScript都是工作在浏览器上的，所以它们都属于前端技术。而Thymeleaf是在服务器上把动态内容计算出具体数据，所以严格来说Thymeleaf是后端技术。")]),t._v(" "),v("p",[v("img",{attrs:{src:e(533),alt:"./images"}})]),t._v(" "),v("blockquote",[v("p",[t._v("这里大家会有个疑问：为什么在『视图』这个地方已经有HTML、CSS、JavaScript这些前端技术了，能够生成用户可以操作的界面，那为什么还需要Thymeleaf这样一个后端技术呢？")]),t._v(" "),v("p",[t._v("简单来说原因是Thymeleaf=HTML+动态数据，而HTML不支持动态数据，这部分需要借助Thymeleaf来完成。")]),t._v(" "),v("p",[t._v("更进一步的细节咱们讲到那再说啦！")])]),t._v(" "),v("h2",{attrs:{id:"_3、web2-0"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、web2-0"}},[t._v("#")]),t._v(" 3、Web2.0")]),t._v(" "),v("p",[t._v("Web2.0是相对于更早的网页开发规范而提出的新规范。Web2.0规范之前的网页开发并没有明确的将HTML、CSS、JavaScript代码分开，而是互相之间纠缠在一起，导致代码维护困难，开发效率很低。")]),t._v(" "),v("blockquote",[v("p",[t._v("在开发中我们把这样彼此纠缠、互相影响的现象称为『耦合』。而把耦合在一起的东西拆解开，让他们彼此独立出来称为『解耦』。各个组成部分独立完成自己负责的功能，和其他模块无关称为『内聚』。")]),t._v(" "),v("p",[t._v("将来大家经常会听到一句话：软件开发提倡『 高内聚，低耦合』。")]),t._v(" "),v("p",[t._v("一个软件项目只有做到了高内聚、低耦合才能算得上结构严谨，模块化程度高，有利于开发和维护。")])]),t._v(" "),v("p",[t._v("所以Web2.0规范主张将网页代码分成下面三个部分：")]),t._v(" "),v("ul",[v("li",[t._v("结构：由HTML实现，负责管理网页的内容。将来网页上不管是静态还是动态的数据都是填写到HTML的标签里。")]),t._v(" "),v("li",[t._v("表现：由CSS实现，负责管理网页内容的表现形式。比如：颜色、尺寸、位置、层级等等。也就是给数据穿上一身漂亮的衣服。")]),t._v(" "),v("li",[t._v("行为：由JavaScript实现，负责实现网页的动态交互效果。比如：轮播图、表单验证、鼠标滑过显示下拉菜单、鼠标滑过改变背景颜色等等。")])]),t._v(" "),v("p",[v("RouterLink",{attrs:{to:"/pro001-javaweb/lecture/chapter02/index.html"}},[t._v("回目录")]),t._v(" "),v("RouterLink",{attrs:{to:"/pro001-javaweb/lecture/chapter02/verse02.html"}},[t._v("下一节")])],1)])}),[],!1,null,null,null);a.default=_.exports},532:function(t,a,e){t.exports=e.p+"assets/img/img001.679a73a9.png"},533:function(t,a,e){t.exports=e.p+"assets/img/img002.9ee16606.png"}}]);