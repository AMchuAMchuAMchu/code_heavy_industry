(window.webpackJsonp=window.webpackJsonp||[]).push([[433],{2192:function(t,a,s){"use strict";s.r(a);var n=s(54),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#_1、方式一-根据id获取"}},[t._v("1、方式一：根据id获取")])]),s("li",[s("a",{attrs:{href:"#_2、方式二-根据类型获取"}},[t._v("2、方式二：根据类型获取")]),s("ul",[s("li",[s("a",{attrs:{href:"#_1指定类型的-bean-唯一"}},[t._v("①指定类型的 bean 唯一")])]),s("li",[s("a",{attrs:{href:"#_2指定类型的-bean-不唯一"}},[t._v("②指定类型的 bean 不唯一")])]),s("li",[s("a",{attrs:{href:"#_3思考"}},[t._v("③思考")])]),s("li",[s("a",{attrs:{href:"#_4结论"}},[t._v("④结论")])])])])])]),s("p"),t._v(" "),s("h1",{attrs:{id:"实验二-重要-获取bean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实验二-重要-获取bean"}},[t._v("#")]),t._v(" 实验二 [重要]获取bean")]),t._v(" "),s("h2",{attrs:{id:"_1、方式一-根据id获取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、方式一-根据id获取"}},[t._v("#")]),t._v(" 1、方式一：根据id获取")]),t._v(" "),s("p",[t._v("由于 id 属性指定了 bean 的唯一标识，所以根据 bean 标签的 id 属性可以精确获取到一个组件对象。上个实验中我们使用的就是这种方式。")]),t._v(" "),s("h2",{attrs:{id:"_2、方式二-根据类型获取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、方式二-根据类型获取"}},[t._v("#")]),t._v(" 2、方式二：根据类型获取")]),t._v(" "),s("h3",{attrs:{id:"_1指定类型的-bean-唯一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1指定类型的-bean-唯一"}},[t._v("#")]),t._v(" ①指定类型的 bean 唯一")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testExperiment02")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HappyComponent")]),t._v(" component "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iocContainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HappyComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doWork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h3",{attrs:{id:"_2指定类型的-bean-不唯一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2指定类型的-bean-不唯一"}},[t._v("#")]),t._v(" ②指定类型的 bean 不唯一")]),t._v(" "),s("p",[t._v("相同类型的 bean 在IOC容器中一共配置了两个：")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 实验一 [重要]创建bean --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("happyComponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.atguigu.ioc.component.HappyComponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 实验二 [重要]获取bean --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("happyComponent2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.atguigu.ioc.component.HappyComponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("根据类型获取时会抛出异常：")]),t._v(" "),s("blockquote",[s("p",[t._v("org.springframework.beans.factory."),s("span",{staticStyle:{color:"blue","font-weight":"bold"}},[t._v("NoUniqueBeanDefinitionException")]),t._v(": No qualifying bean of type 'com.atguigu.ioc.component.HappyComponent' available: expected single matching bean but found 2: happyComponent,happyComponent2")])]),t._v(" "),s("h3",{attrs:{id:"_3思考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3思考"}},[t._v("#")]),t._v(" ③思考")]),t._v(" "),s("p",[t._v("如果组件类实现了接口，根据接口类型可以获取 bean 吗？")]),t._v(" "),s("blockquote",[s("p",[t._v("可以，前提是bean唯一")])]),t._v(" "),s("p",[t._v("如果一个接口有多个实现类，这些实现类都配置了 bean，根据接口类型可以获取 bean 吗？")]),t._v(" "),s("blockquote",[s("p",[t._v("不行，因为bean不唯一")])]),t._v(" "),s("h3",{attrs:{id:"_4结论"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4结论"}},[t._v("#")]),t._v(" ④结论")]),t._v(" "),s("p",[t._v("根据类型来获取bean时，在满足bean唯一性的前提下，其实只是看：『对象 "),s("span",{staticStyle:{color:"blue","font-weight":"bold"}},[t._v("instanceof")]),t._v(" 指定的类型』的返回结果，只要返回的是true就可以认定为和类型匹配，能够获取到。")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/pro004-Spring/lecture/chapter01/verse03/experiment01.html"}},[t._v("上一个实验")]),t._v(" "),s("RouterLink",{attrs:{to:"/pro004-Spring/lecture/chapter01/verse03.html"}},[t._v("回目录")]),t._v(" "),s("RouterLink",{attrs:{to:"/pro004-Spring/lecture/chapter01/verse03/experiment03.html"}},[t._v("下一个实验")])],1)])}),[],!1,null,null,null);a.default=e.exports}}]);