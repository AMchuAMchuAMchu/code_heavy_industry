(window.webpackJsonp=window.webpackJsonp||[]).push([[541],{2402:function(t,e,v){"use strict";v.r(e);var _=v(54),r=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"第一节-gc的基本问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第一节-gc的基本问题"}},[t._v("#")]),t._v(" 第一节 GC的基本问题")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("什么是GC？")]),t._v(" "),v("p",[t._v("GC 是 garbage collection 的缩写，意思是垃圾回收——把内存（特别是堆内存）中不再使用的空间释放掉；清理不再使用的对象。")])]),t._v(" "),v("li",[v("p",[t._v("为什么要GC？")]),t._v(" "),v("p",[t._v("堆内存是各个"),v("span",{staticStyle:{color:"blue","font-weight":"bold"}},[t._v("线程共享")]),t._v("的空间，不能无节制的使用。服务器运行的时间通常都很长。累积的对象也会非常多。这些对象如果不做任何清理，任由它们数量不断累加，内存很快就会耗尽。所以GC就是要把不使用的对象都清理掉，把内存空间空出来，让项目可以持续运行下去。")])]),t._v(" "),v("li",[v("p",[t._v("什么样的对象是垃圾对象？")]),t._v(" "),v("p",[t._v("不再使用或获取不到的对象是垃圾对象。")])]),t._v(" "),v("li",[v("p",[t._v("如何把垃圾对象找出来？")]),t._v(" "),v("p",[t._v("办法1：引用计数法（不采用，不能解决循环引用问题）[了解]")]),t._v(" "),v("p",[t._v("办法2：可达性分析（从GC Roots对象出发，不可达的对象就是要清理的对象）[理解]")])]),t._v(" "),v("li",[v("p",[t._v("找到垃圾对象如何执行清理？")]),t._v(" "),v("p",[t._v("具体的GC算法")])])]),t._v(" "),v("p",[v("RouterLink",{attrs:{to:"/pro016-JVM/lecture/chapter08/index.html"}},[t._v("回目录")]),t._v(" "),v("RouterLink",{attrs:{to:"/pro016-JVM/lecture/chapter08/verse02.html"}},[t._v("下一节")])],1)])}),[],!1,null,null,null);e.default=r.exports}}]);