(window.webpackJsonp=window.webpackJsonp||[]).push([[393],{2095:function(t,e,r){"use strict";r.r(e);var _=r(54),a=Object(_.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p"),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#_1、生命周期"}},[t._v("1、生命周期")]),r("ul",[r("li",[r("a",{attrs:{href:"#_1作用"}},[t._v("①作用")])]),r("li",[r("a",{attrs:{href:"#_2三个生命周期"}},[t._v("②三个生命周期")])]),r("li",[r("a",{attrs:{href:"#_3特点"}},[t._v("③特点")])])])]),r("li",[r("a",{attrs:{href:"#_2、插件和目标"}},[t._v("2、插件和目标")]),r("ul",[r("li",[r("a",{attrs:{href:"#_1插件"}},[t._v("①插件")])]),r("li",[r("a",{attrs:{href:"#_2目标"}},[t._v("②目标")])])])]),r("li",[r("a",{attrs:{href:"#_3、仓库"}},[t._v("3、仓库")])])])]),r("p"),t._v(" "),r("h1",{attrs:{id:"第五章-其他核心概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第五章-其他核心概念"}},[t._v("#")]),t._v(" 第五章 其他核心概念")]),t._v(" "),r("h2",{attrs:{id:"_1、生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1、生命周期"}},[t._v("#")]),t._v(" 1、生命周期")]),t._v(" "),r("h3",{attrs:{id:"_1作用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1作用"}},[t._v("#")]),t._v(" ①作用")]),t._v(" "),r("p",[t._v("为了让构建过程自动化完成，Maven 设定了三个生命周期，生命周期中的每一个环节对应构建过程中的一个操作。")]),t._v(" "),r("h3",{attrs:{id:"_2三个生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2三个生命周期"}},[t._v("#")]),t._v(" ②三个生命周期")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("生命周期名称")]),t._v(" "),r("th",[t._v("作用")]),t._v(" "),r("th",[t._v("各个环节")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("Clean")]),t._v(" "),r("td",[t._v("清理操作相关")]),t._v(" "),r("td",[t._v("pre-clean"),r("br"),t._v("clean"),r("br"),t._v("post-clean")])]),t._v(" "),r("tr",[r("td",[t._v("Site")]),t._v(" "),r("td",[t._v("生成站点相关")]),t._v(" "),r("td",[t._v("pre-site"),r("br"),t._v("site"),r("br"),t._v("post-site"),r("br"),t._v("deploy-site")])]),t._v(" "),r("tr",[r("td",[t._v("Default")]),t._v(" "),r("td",[t._v("主要构建过程")]),t._v(" "),r("td",[t._v("validate"),r("br"),t._v("generate-sources"),r("br"),t._v("process-sources"),r("br"),t._v("generate-resources"),r("br"),t._v("process-resources 复制并处理资源文件，至目标目录，准备打包。"),r("br"),t._v("compile 编译项目 main 目录下的源代码。"),r("br"),t._v("process-classes"),r("br"),t._v("generate-test-sources"),r("br"),t._v("process-test-sources"),r("br"),t._v("generate-test-resources"),r("br"),t._v("process-test-resources 复制并处理资源文件，至目标测试目录。"),r("br"),t._v("test-compile 编译测试源代码。"),r("br"),t._v("process-test-classes"),r("br"),t._v("test 使用合适的单元测试框架运行测试。这些测试代码不会被打包或部署。"),r("br"),t._v("prepare-package"),r("br"),t._v("package 接受编译好的代码，打包成可发布的格式，如JAR。"),r("br"),t._v("pre-integration-test"),r("br"),t._v("integration-test"),r("br"),t._v("post-integration-test"),r("br"),t._v("verify"),r("br"),t._v("install将包安装至本地仓库，以让其它项目依赖。"),r("br"),t._v("deploy将最终的包复制到远程的仓库，以让其它开发人员共享；或者部署到服务器上运行（需借助插件，例如：cargo）。")])])])]),t._v(" "),r("h3",{attrs:{id:"_3特点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3特点"}},[t._v("#")]),t._v(" ③特点")]),t._v(" "),r("ul",[r("li",[t._v("前面三个生命周期彼此是独立的。")]),t._v(" "),r("li",[t._v("在任何一个生命周期内部，执行任何一个具体环节的操作，都是从本周期最初的位置开始执行，直到指定的地方。（本节记住这句话就行了，其他的都不需要记）")])]),t._v(" "),r("p",[t._v("Maven 之所以这么设计其实就是为了提高构建过程的自动化程度：让使用者只关心最终要干的即可，过程中的各个环节是自动执行的。")]),t._v(" "),r("h2",{attrs:{id:"_2、插件和目标"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2、插件和目标"}},[t._v("#")]),t._v(" 2、插件和目标")]),t._v(" "),r("h3",{attrs:{id:"_1插件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1插件"}},[t._v("#")]),t._v(" ①插件")]),t._v(" "),r("p",[t._v("Maven 的核心程序仅仅负责宏观调度，不做具体工作。具体工作都是由 Maven 插件完成的。例如：编译就是由 maven-compiler-plugin-3.1.jar 插件来执行的。")]),t._v(" "),r("h3",{attrs:{id:"_2目标"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2目标"}},[t._v("#")]),t._v(" ②目标")]),t._v(" "),r("p",[t._v("一个插件可以对应多个目标，而每一个目标都和生命周期中的某一个环节对应。"),r("br")]),t._v(" "),r("p",[t._v("Default 生命周期中有 compile 和 test-compile 两个和编译相关的环节，这两个环节对应 compile 和 test-compile 两个目标，而这两个目标都是由 maven-compiler-plugin-3.1.jar 插件来执行的。")]),t._v(" "),r("h2",{attrs:{id:"_3、仓库"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3、仓库"}},[t._v("#")]),t._v(" 3、仓库")]),t._v(" "),r("ul",[r("li",[t._v("本地仓库：在当前电脑上，为电脑上所有 Maven 工程服务")]),t._v(" "),r("li",[t._v("远程仓库：需要联网\n"),r("ul",[r("li",[t._v("局域网：我们自己搭建的 Maven 私服，例如使用 Nexus 技术。")]),t._v(" "),r("li",[t._v("Internet\n"),r("ul",[r("li",[t._v("中央仓库")]),t._v(" "),r("li",[t._v("镜像仓库：内容和中央仓库保持一致，但是能够分担中央仓库的负载，同时让用户能够就近访问提高下载速度，例如：Nexus aliyun")])])])])])]),t._v(" "),r("p",[t._v("建议：不要中央仓库和阿里云镜像混用，否则 jar 包来源不纯，彼此冲突。"),r("br")]),t._v(" "),r("p",[t._v("专门搜索 Maven 依赖信息的网站：https://mvnrepository.com/"),r("br")]),t._v(" "),r("p",[r("RouterLink",{attrs:{to:"/pro002-maven/chapter04/index.html"}},[t._v("上一章")]),t._v(" "),r("RouterLink",{attrs:{to:"/pro002-maven/index.html"}},[t._v("回目录")]),t._v(" "),r("RouterLink",{attrs:{to:"/pro002-maven/chapter06/index.html"}},[t._v("下一章")])],1)])}),[],!1,null,null,null);e.default=a.exports}}]);